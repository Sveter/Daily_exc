#include<iostream>
using namespace std;

/*
以value = 18为例， 先从最小素数2开始除， 判断18是否能够被2整除， 则value = 18/2 = 9接着判断是否能够被2整除， 如果能整除，以此类推， 直到value为素数停止。 如果发现不能被2整除了，那就判断是否能被2以后的素数整除。

举例： value = 18。 18能被2整除， value = 18/2 = 9, 9不为素数， 9不能被2整除， 接着尝试除2以后的素数，结果能被3整除， value = 9/3 = 3， 3为素数停止。
输出：18 = 2 * 3 * 3
举例： value = 90， 90能被2整除， value = 90/2 = 45, 45不为素数， 45不能被2整除， 接着尝试素数3， 结果能够被3整除， value = 45/3 = 15， 15不为素数， 15可以被3整除， 接着除3， value = 15/3 = 5, 5为素数停止。
输出: 90 = 2 * 3 * 3 * 5
*/

int main() {

    int n = 0;

    while (cin >> n) {
        //先输出n = 
        cout << n << " = ";

        for (int i = 2; i < n; ++i) {

            while (n % i == 0 && i != n) {
                cout << i << " * ";
                n = n / i;
            }
        }

        cout << n << endl;
    }
}
